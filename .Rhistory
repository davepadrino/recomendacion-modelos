# Si ya está instalado, no lo instala.
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, repos = "http:/cran.rstudio.com")
if (!require(pkg, character.only = TRUE)) stop(paste("load failure:", pkg))
}
}
install("jsonlite")
fetch_data = function(preamble, list){
data = preamble
for(elem in list){
data = paste0(data, paste0(strsplit(elem, " ")[[1]], collapse = "+"), "|", collapse = "")
}
return(substr(data, 0, nchar(data)-1))
}
# Install dependencies in Linux
# sudo apt-get install libcurl4-openssl-dev
install = function(pkg){
# Si ya está instalado, no lo instala.
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, repos = "http:/cran.rstudio.com")
if (!require(pkg, character.only = TRUE)) stop(paste("load failure:", pkg))
}
}
install("jsonlite")
fetch_data = function(preamble, list){
data = preamble
for(elem in list){
data = paste0(data, paste0(strsplit(elem, " ")[[1]], collapse = "+"), "|", collapse = "")
}
return(substr(data, 0, nchar(data)-1))
}
get_url = function(origins, destinations, key, mode = "driving", language = "es"){
# install(pkg)
# url base for distance matrix api
base = "https://maps.googleapis.com/maps/api/distancematrix/json?"
# This could change, using only some atributes from API
origin = fetch_data("origins=", origins)
destination = fetch_data("destinations=", destinations)
key = fetch_data("key=", key)
mode = fetch_data("mode=", mode)
language = fetch_data("language=", language)
# Getting final format for Google API
api_url = paste(c(base, paste0(c(origin, destination, key, mode, language), collapse = "&")), collapse = "")
return(api_url)
}
get_data = function(api_url){
return(fromJSON(api_url))
}
# To Complete
parse_data = function(json){
}
?confusion.matrix
?confusionMatrix
install = function(pkg){
# Si ya está instalado, no lo instala.
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, repos = "http:/cran.rstudio.com")
if (!require(pkg, character.only = TRUE)) stop(paste("load failure:", pkg))
}
}
install("recommenderlab")
library("recommenderlab")
?Recommender
?acast
setwd("~/Desktop/univ/Minería de Datos/Tareas/Tarea_4/recomendacion-modelos-master")
library("arules")
library("dplyr")
library("arulesViz")
periodico <- read.csv("periodico.csv")
ejemplo <- read.csv("ejemplo.csv")
colnames(periodico)[5] <-  "items"
ejemplo$X <- NULL
periodico$X <- NULL
example.bots <- as.character()
time <- as.numeric()
for(i in 1:length(periodico$entry)){
calc <- as.numeric(difftime(periodico$exit[i], periodico$entry[i], unit="sec"))
time <- append(time,calc)
if (calc < 21){
example.bots <- append(example.bots, as.character(periodico$ID[i]))
}
}
periodico$times <- time
rm(time)
periodico$items <- as.character(periodico$items)
items <- sapply(periodico$items, unliststr)
contenido <- c("deportes","politica","variedades","internacional","nacionales","sucesos","comunidad","negocios","opinion")
unliststr <- function(vec){
it <- unlist(strsplit(vec, ","))
numbers <- unique(na.omit(as.numeric(unlist(strsplit(as.character(it), "[^0-9]+")))))
element <- character()
for (i in 1:length(numbers)){
if(floor(((numbers[i]/9) %% 1)*10)!=0){
group <- as.integer((numbers[i]/9)+1)
article <- floor(((numbers[i]/9) %% 1)*10)
article <- paste(c("articulo",article), collapse = "")
item <- paste(c(contenido[group],article), collapse = "/")
element <- paste(c(element,item), collapse = ",")
}else{
group <- as.integer(numbers[i]/9)
article <- paste(c("articulo",9), collapse = "")
item <- paste(c(contenido[group],article), collapse = "/")
element <- paste(c(element,item), collapse = ",")
}
}
return(element)
}
items <- sapply(periodico$items, unliststr)
items[1]
periodico$articulos <- sapply(periodico$items, unliststr)
periodico$articulos[1]
rm(items)
summary(periodico)
new <- periodico
new$entry <- NULL
new$exit <- NULL
new$times <- NULL
new <- as(new, "transactions")
itemFrequencyPlot(new, topN = 10, "absolute")
sort(itemFrequency(new, "absolute"), decreasing = T)
head(sort(itemFrequency(new, "absolute"), decreasing = T), 10)
rm(new)
colnames(new())
colnames(new
)
nueva <- periodico
nueva$entry <- NULL
nueva$exit <- NULL
nueva$times <- NULL
nueva <- as(nueva, "transactions")
colnames(nueva)
nueva$articulos <- NULL
nueva <- as(nueva, "transactions")
nueva$items <- as.character(nueva$items)
nueva <- as(nueva, "transactions")
aux <- periodico$items
aux <- as.character(aux)
aux <- gsub(pattern = "}",x=aux,replacement = "")
aux[1]
aux <- gsub(pattern = "\\{",x=aux,replacement = "")
aux[1]
aux <- gsub(pattern = " ",x=aux,replacement = "")
aux[1]
aux <- aux
nuevo <- matrix(nrow=length(aux) , ncol = 81)
View(nuevo)
nuevo[,] <- F
View(nuevo)
nuevo <- as.data.frame(nuevo)
nueva$items <- as.factor(nueva$items)
nueva <- as(nueva, "transactions")
nueva[1]
nueva
head(sort(itemFrequency(nueva, "absolute"), decreasing = T), 10)
summary(nueva)
summary(periodico)
nueva <- periodico
nueva$entry <- NULL
nueva$exit <- NULL
nueva$times <- NULL
nueva$articulos <- NULL
nueva <- as(nueva$ID, "transactions")
nueva <- as(as.factor(nueva$ID), "transactions")
nueva <- as(nueva, "transactions")
nueva <- as(nueva, "transactions")
nueva
nueva$items <- as.factor(nueva$items)
nueva <- as(nueva, "transactions")
head(sort(itemFrequency(nueva, "absolute"), decreasing = T), 10)
nueva
summary(nueva)
summary(periodico)
summary(periodico)[1]
summary(periodico)[,1]
head(summary(periodico)[,1],10)
summary(periodico)[1,]
summary(periodico)[,1]
summary(periodico)[[1]]
inspect(periodico)
inspect(periodico$ID)
?inspect
inspect(nueva)
inspect(nueva)[1]
inspect(nueva[1])
str(periodico)
summary(periodico)[,1]
summary(periodico)
table(periodico$ID)
summary(periodico, maxsum = 10)
summary(periodico, maxsum = 10)[,1]
summary(periodico, maxsum = 11)[,1]
sort(table(periodico$ID), decreasing = T)
head(sort(table(periodico$ID), decreasing = T), 10)
length(aux)
aux[1]
strsplit(aux[1],split = ",")
for (i in 1:length(aux)){
a <- unlist(strsplit(aux[i],split = ","))
print(paste("va por la: ",i))
for (j in a){
nuevo[i,j] <- T
}
}
View(nuevo)
trans <- as(nuevo, "transactions")
summary(trans)
unique(trans)
itemFrequencyPlot(trans, topN = 10, "absolute")
itemFrequency(trans, "absolute")
reglas <- apriori(trans, parameter = list(supp = 0.00003, conf = 0.8, target = "rules"))
inspect(subset(reglas, subset = lhs %ain% c("politica/articulo1","deporte/articulo1")))
inspect(reglas)
datos <- data(Groceries)
summary(Groceries)
unique(Groceries) # el numero de columnas son la cantidad de articulos unicos
dim(Groceries)
9835*0.0006100661
reglas <- apriori(Groceries)
inspect(reglas)
reglas <- apriori(Groceries, parameter = list(supp = 0.0006, conf = 0.98, target = "rules"))
inspect(sort(reglas, by = "support")[1:10])
inspect(subset(reglas, subset = lhs %in% c("sausage",
"citrus fruit",
"root vegetables",
"other vegetables",
"whole milk",
"whipped/sour cream")))
unique(inspect(subset(reglas, subset = lhs %in% c("sausage",
"citrus fruit",
"root vegetables",
"other vegetables",
"whole milk",
"whipped/sour cream"))))
unique(periodico$articulos)
trans <- as(nuevo, "transactions")
unique(trans)
itemFrequency(trans, "absolute")
View(nuevo)
items <- as.character(periodico$items)
gsub(pattern = "}",x=items[1],replacement = "")
gsub(pattern = "}|{",x=items[1],replacement = "")
gsub("{+}",x=items[1],replacement = "")
gsub("{ | }",x=items[1],replacement = "")
gsub("{\\.|}\\.",x=items[1],replacement = "")
gsub("{\\.|\\.}",x=items[1],replacement = "")
gsub("\\.{|\\.}",x=items[1],replacement = "")
gsub("{",x=items[1],replacement = "")
gsub("{",items[1],"")
gsub("}",items[1],"")
gsub(pattern = "}",x=items[1],replacement = "")
gsub(pattern = "}",x=items[1],"")
gsub(pattern = "}",items[1],"")
gsub("}",x=items[1],"")
gsub("}|e",x=items[1],"")
gsub("}|\\{",x=items[1],"")
gsub("}|\\{|[:blank:]",x=items[1],"")
items <- gsub("}|\\{|[:blank:]",x=items,"")
head(items)
?data.frame
View(ejemplo)
unique(ejemplo$ID)
length(unique(ejemplo$ID))
length(unique(ejemplo$items))
length(unique(periodico$ID))
length(unique(periodico$items))
nodata <- data.frame(nrow(items)), 1:81)
nodata <- data.frame(nrow(items)), 1:81)
nodata <- data.frame(nrow(items), 1:81)
length(items)
nrow(items)
class(items)
nodata <- data.frame(length(items), 1:81)
nodata
nodata <- data.frame(1:length(items), 1:81)
nodata <- data.frame(items, 1:81)
nodata <- data.frame(id = character(0), max1 = numeric(0), max2 = numeric(0))
nodata
?Matrix
nodata <- matrix(items, nrow = length(items), ncol = 81)
dim(nodata)
nodata[1]
head(nodata)
nodata <- matrix(nrow = length(items), ncol = 81)
head(nodata)
nodata <- matrix(0, nrow = length(items), ncol = 81)
head(nodata)
nodata <- data.frame(nodata, row.names = "ID", colnames = "no")
nodata <- as.data.frame(nodata)
View(nuevo)
View(nuevo)
head(items)
strsplit(items[1], split = ',')
unique(strsplit(items, split = ','))
unique(unlist(strsplit(items[1], split = ',')))
unique(unlist(strsplit(items, split = ',')))
sort(unique(unlist(strsplit(items, split = ','))))
colnames(nodata) <- unique(unlist(strsplit(items, split = ',')))
names(nodata)
View(nodata)
items.names <- unique(unlist(strsplit(items, split = ',')))
colnames(nodata) <- items.names
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items,"")
ejemplo$items
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items,"")
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items2,"")
nodata2 <- matrix(0, nrow = length(items2), ncol = 81)
nodata2 <- as.data.frame(nodata2)
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
colnames(nodata2) <- items.names
nodata2 <- as.data.frame(matrix(0, nrow = length(items2), ncol = 81))
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
colnames(nodata2) <- items.names
dim
dim(nodata2)
colnames(nodata2) <- items.names2
dim(nodata2)
View(nodata2)
length(items.names2)
nodata2 <- as.data.frame(matrix(0, nrow = length(items2), ncol = length(items.names2)))
colnames(nodata2) <- items.names2
for (i in 1:length(nodata2)){
for (j in items.names2){
nodata2[i,j] <- 1
}
}
items.names2[1]
items.names2[1] in items2[1]
items2[1]
unlist(strsplit(items2[1], split = ',')))
unlist(strsplit(items2[1], split = ','))
items.names2 in unlist(strsplit(items2[1], split = ','))
class(unlist(strsplit(items2[1], split = ',')))
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items2,"")
items.names2 <- unlist(strsplit(items2, split = ','))
items.names2[1]
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
length(items2)
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items2,"")
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
nodata2 <- as.data.frame(matrix(0, nrow = length(items2), ncol = length(items.names2)))
colnames(nodata2) <- items.names2
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- 1
}
}
View(ejemplo)
items <- as.character(periodico$items)
items <- gsub("}|\\{|[:blank:]",x=items,"")
items.names <- unique(unlist(strsplit(items, split = ',')))
nodata <- as.data.frame(matrix(0, nrow = length(items), ncol = length(items.names)))
colnames(nodata) <- items.names
for (i in 1:length(items)){
aux <- unlist(strsplit(items[i], split = ','))
for (j in aux){
nodata[i,j] <- 1
}
}
View(nodata)
View(periodico)
datransactions <- as(nodata, "transactions")
datransactions <- as(as.factor(nodata), "transactions")
items <- as.character(periodico$items)
items <- gsub("}|\\{|[:blank:]",x=items,"")
items.names <- unique(unlist(strsplit(items, split = ',')))
nodata <- as.data.frame(matrix(F, nrow = length(items), ncol = length(items.names)))
View(nodata)
for (i in 1:length(items)){
aux <- unlist(strsplit(items[i], split = ','))
for (j in aux){
nodata[i,j] <- T
}
}
View(nodata)
nodata(,(1,81):= NULL)
nodata(,(1:81):= NULL)
nodata[,(1:81):= NULL]
nodata[,(1:81)<- NULL]
nodata[,(1:81)]<- NULL
View(nodata)
datransactions <- as(nodata, "transactions")
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items2,"")
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
nodata2 <- as.data.frame(matrix(nrow = length(items2), ncol = length(items.names2)))
View(nodata2)
colnames(nodata2) <- items.names2
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
datransactions2 <- as(nodata2, "transactions")
datransactions2
summary(datransactions2)
unique(datransactions2)
itemFrequencyPlot(datransactions2, topN = 10, "absolute")
itemFrequency(datransactions2, "absolute")
?apriori
summary(datransactions2)
unique(datransactions2)
itemFrequency(datransactions2, "absolute")
reglas <- apriori(datransactions2, parameter = list(supp = 0.01, conf = 0.8, target = "rules"))
reglas <- apriori(datransactions2, parameter = list(supp = 0.1, conf = 0.8, target = "rules"))
rules <- apriori(datransactions2, parameter = list(supp = 0.1, conf = 0.8, target = "rules"))
rules
rules <- apriori(datransactions2, parameter = list(supp = 0.001, conf = 0.8, target = "rules"))
rules <- apriori(datransactions2, parameter = list(supp = 0.5, conf = 0.8, target = "rules"))
rules
filldf <- function(items2, nodata2){
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
}
nodata2 <- filldf(items2, nodata2)
filldf <- function(items2, nodata2){
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
return(nodata2)
}
nodata2 <- filldf(items2, nodata2)
filldf <- function(items2, nodata2){
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
return(nodata2)
}
nodata2 <- filldf(items2, nodata2)
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
items2 <- as.character(ejemplo$items)
items2 <- gsub("}|\\{|[:blank:]",x=items2,"")
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
nodata2 <- as.data.frame(matrix(nrow = length(items2), ncol = length(items.names2)))
colnames(nodata2) <- items.names2
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
View(nodata2)
datransactions2 <- as(nodata2, "transactions")
itemFrequency(datransactions2, "absolute")
rules <- apriori(datransactions2, parameter = list(supp = 0.0006, conf = 0.98, target = "rules"))
inspect(reglas)
rules
inspect(subset(rules, subset = lhs %ain% c("politica/articulo1","deporte/articulo1")))
inspect(subset(rules, subset = lhs %ain% c("item1")))
inspect(rules)
rules <- apriori(datransactions2, parameter = list(supp = 1.45, conf = 0.98, target = "rules"))
rules <- apriori(datransactions2, parameter = list(supp = 0,000616908, conf = 0.98, target = "rules"))
rules <- apriori(datransactions2, parameter = list(supp = 0.000616908, conf = 0.98, target = "rules"))
inspect(rules)
inspect(subset(rules, subset = lhs %ain% c("item1")))
periodico$articulos[1]
View(ejemplo)
items2 <- as.character(ejemplo$articles)
items2[1]
items.names2 <- unique(unlist(strsplit(items2, split = ',')))
items.names2[1]
nodata2 <- as.data.frame(matrix(nrow = length(items2), ncol = length(items.names2)))
View(nodata2)
colnames(nodata2) <- items.names2
View(nodata2)
for (i in 1:length(items2)){
aux <- unlist(strsplit(items2[i], split = ','))
for (j in aux){
nodata2[i,j] <- T
}
}
View(nodata2)
datransactions2 <- as(nodata2, "transactions")
itemFrequency(datransactions2, "absolute")
rules <- apriori(datransactions2, parameter = list(supp = 0.000616908, conf = 0.98, target = "rules"))
inspect(rules)
View(periodico)
inspect(subset(rules, subset = lhs %ain% c("politica/articulo1","deporte/articulo1")))
datransactions2 <- as(nodata2, "transactions")
itemFrequency(datransactions2, "absolute")
rules <- apriori(datransactions2, parameter = list(supp = 0.000616908, conf = 0.98, target = "rules"))
inspect(subset(rules, subset = lhs %ain% c("politica/articulo1","deporte/articulo1")))
inspect(subset(rules, subset = lhs %ain% c("item1")))
inspect(subset(rules, subset = lhs %ain% c("politica/articulo1")))
View(periodico)
inspect(subset(rules, subset = lhs %ain% c("deportes/articulo1","deportes/articulo2")))
inspect(subset(rules, subset = lhs %ain% c("sucesos/articulo1","deportes/articulo2")))
inspect(subset(rules, subset = lhs %ain% c("nacionales/articulo1","deportes/articulo2")))
inspect(subset(rules, subset = lhs %ain% c("deportes/articulo1","deportes/articulo2")))
inspect(subset(rules, subset = lhs %ain% c("politica/articulo1")))
inspect(rules)
